"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJestNamer = exports.convertToFilename = void 0;
const globals_1 = require("@jest/globals");
const path_1 = __importDefault(require("path"));
const Namer = require("../../Namer");
function convertToFilename(name) {
    const forbidden = "\\/:?\"<>|' ";
    for (let forbiddenKey of forbidden) {
        if (name.includes(forbiddenKey)) {
            name = name.replace(forbiddenKey, "_");
        }
    }
    return name;
}
exports.convertToFilename = convertToFilename;
function getJestNamer() {
    const state = globals_1.expect.getState();
    const file = path_1.default.parse(state.testPath);
    const testPath = file.dir;
    const testFileName = file.name;
    const testName = convertToFilename(`${testFileName}.${state.currentTestName}`);
    return new Namer(testPath, testName);
}
exports.getJestNamer = getJestNamer;
