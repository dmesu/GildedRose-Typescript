import { StringWrapper } from "./StringWrapper";
export declare class LoggingInstance {
    logger: (text: string) => void;
    private counter;
    private tabs;
    private toggles;
    log_stack_traces: boolean;
    private log_with_timestamps;
    timer: () => Date;
    private previous_timestamp;
    constructor();
    log_to_string(): StringWrapper;
    use_markers(additional_stack: number, code: () => void, parameters?: string | (() => string)): void;
    variable(name: string, value: any, showTypes: boolean): void;
    private log_line;
    private getTabs;
    private withTabbing;
    hour_glass(): void;
    show_all(show: boolean): void;
    event(event_name: string): void;
    show_queries(show: boolean): void;
    show_markers(show: boolean): void;
    show_events(show: boolean): void;
    show_messages(show: boolean): void;
    show_variables(show: boolean): void;
    show_hour_glass(show: boolean): void;
    warning(exception: Error | string): void;
    query(queryText: string): void;
    message(messageText: string): void;
    show_timestamps(show: boolean): void;
    private get_timestamp;
}
