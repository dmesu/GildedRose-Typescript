"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleLogger = void 0;
const Wrapper_1 = require("./Wrapper");
const LoggingInstance_1 = require("./LoggingInstance");
class SimpleLogger {
    static show_queries(show) {
        this._wrapper.get().show_queries(show);
    }
    static show_markers(show) {
        this._wrapper.get().show_markers(show);
    }
    static show_events(show) {
        this._wrapper.get().show_events(show);
    }
    static show_messages(show) {
        this._wrapper.get().show_messages(show);
    }
    static show_variables(show) {
        this._wrapper.get().show_variables(show);
    }
    static show_hour_glass(show) {
        this._wrapper.get().show_hour_glass(show);
    }
    static register_logger(log_method) {
        this._wrapper.get().logger = log_method;
    }
    static log_to_string() {
        this._wrapper = new Wrapper_1.SingleWrapper(new LoggingInstance_1.LoggingInstance());
        return SimpleLogger._wrapper.get().log_to_string();
    }
    static use_markers(code, parameters = "") {
        this._wrapper.get().use_markers(1, code, parameters);
    }
    static variable(name, value, show_types = false) {
        SimpleLogger._wrapper.get().variable(name, value, show_types);
    }
    static hour_glass() {
        this._wrapper.get().hour_glass();
    }
    static show_all(show) {
        this._wrapper.get().show_all(show);
    }
    static event(text) {
        this._wrapper.get().event(text);
    }
    static query(queryText) {
        this._wrapper.get().query(queryText);
    }
    static message(messageText) {
        this._wrapper.get().message(messageText);
    }
    static warning(exception) {
        this._wrapper.get().warning(exception);
    }
    static show_timestamps(show) {
        this._wrapper.get().show_timestamps(show);
    }
}
exports.SimpleLogger = SimpleLogger;
SimpleLogger._wrapper = new Wrapper_1.SingleWrapper(new LoggingInstance_1.LoggingInstance());
